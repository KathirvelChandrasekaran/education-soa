// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Auth {
  emailID  String @id @db.VarChar(255)
  password String
  user_id  String @default(uuid())
  role     String @default("student")
}

model Student {
  email        String              @id @db.VarChar(255)
  user_id      String
  name         String              @db.VarChar(255)
  dob          String
  createdAt    DateTime            @default(now())
  course       String              @db.VarChar(255)
  department   Department          @relation(fields: [deptId], references: [dept_id])
  deptId       String
  gender       String              @db.VarChar(255)
  isDayScholar Boolean             @default(true)
  personal     ParticularsPersonal @relation(fields: [email], references: [email])
  completed    Boolean             @default(false)
}

model Department {
  dept_id   String    @id
  dept_name String    @db.VarChar(255)
  Student   Student[]
}

model ParticularsPersonal {
  email          String              @id @db.VarChar(255)
  particulars_id String              @default(uuid())
  degree         String?             @db.VarChar(255)
  roll_number    String?             @db.VarChar(255)
  photo_url      String?
  branch         String?             @db.VarChar(255)
  date_joined    DateTime?           @default(now())
  study_from     Int?
  study_to       Int?
  religion       String?             @db.VarChar(255)
  community      String?             @db.VarChar(255)
  parent_name    String?             @db.VarChar(255)
  annual_income  BigInt?             @db.BigInt
  address        String?
  phone          BigInt?             @db.BigInt
  Student        Student[]
  education      ParticularsEducaton @relation(fields: [email], references: [email])
  completed      Boolean             @default(false)
}

model ParticularsEducaton {
  email               String                @id @db.VarChar(255)
  sslc                String?               @db.VarChar(255)
  sslc_yop            Int?
  sslc_name           String?               @db.VarChar(255)
  sslc_percent        Int?
  hsc                 String?               @db.VarChar(255)
  hsc_yop             Int?
  hsc_name            String?               @db.VarChar(255)
  hsc_percent         Int?
  ug                  String?               @db.VarChar(255)
  ug_yop              Int?
  ug_name             String?               @db.VarChar(255)
  ug_percent          Int?
  completed           Boolean               @default(false)
  ParticularsPersonal ParticularsPersonal[]
}
